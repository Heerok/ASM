
#map {
    height: 100%;
    width: 100%;
}
#mapDiv{
        position: absolute;
        z-index: 0;
        padding-right: 0px!important;
        padding-left: 0px!important;
}
#taskerDiv{
        position: absolute;
        z-index: 1;
}
#userSessionDiv{
        margin-top:-155px;
}
#roundOffDiv{
        position: relative;
        height: 630px;
        z-index: -1;
}
#taskDiv{
    position: absolute;
        z-index: 1;
}
.taskPanel {
    height: 503px!important;
    overflow-y:scroll!important;
}

.taskerPanel {
    height: 540px!important;
    overflow-y:scroll!important;
    }

.userSessionPanel {
    height: 100px!important;
    overflow-y:scroll;
}

.dragNdrop ul[custom-dnd-list],
.dragNdrop ul[custom-dnd-list] > li {
    position: relative;
}

.liRed {
   background-color: rgba(215, 61, 50, 0.22)!important;
}

/**
* The dnd-list should always have a min-height,
* otherwise you can't drop to it once it's empty
*/
/**
* The dndDraggingSource class will be applied to
* the source element of a drag operation. It makes
* sense to hide it to give the user the feeling
* that he's actually moving it.
*/
.dragNdrop ul[custom-dnd-list] .dndDraggingSource {
    display: none;
}

/**
* An element with .dndPlaceholder class will be
* added to the dnd-list while the user is dragging
* over it.
*/

.dragNdrop ul[custom-dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
* The dnd-lists's child elements currently MUST have
* position: relative. Otherwise we can not determine
* whether the mouse pointer is in the upper or lower
* half of the element we are dragging over. In other
* browsers we can use event.offsetY for this.
*/
.dragNdrop ul[custom-dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/**
* The dnd-list should always have a min-height,
* otherwise you can't drop to it once it's empty
*/
.dragNdrop li[custom-dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

.dragNdrop ul {
    min-height: 42px;
    padding-left: 0px;
}


/**
* An element with .dndPlaceholder class will be
* added to the dnd-list while the user is dragging
* over it.
*/
.dragNdrop li[custom-dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
* The dnd-lists's child elements currently MUST have
* position: relative. Otherwise we can not determine
* whether the mouse pointer is in the upper or lower
* half of the element we are dragging over. In other
* browsers we can use event.offsetY for this.
*/
.dragNdrop li[custom-dnd-list] {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

.dragNdrop  .dndDraggingSource {
display: none;
}
